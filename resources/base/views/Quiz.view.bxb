result-view {
  match {
    Quiz (this)
  }
  refresh {
    if (this.status == 'tutorial') {
      spec {
        delay-seconds (10)
        with-request {
          intent {
            goal { ContinueQuiz }
            value {$expr(this)}
          }
        }
      }
    }
    if (this.status == 'answer') {
      if (this.currentQuestion+1 == size(this.questions)){
        spec {
          delay-seconds (6)
          with-request {
            intent {
              goal {NextQuestion}
              value: Quiz{
                category:$expr(this.category)
                currentQuestion:$expr(this.currentQuestion)
                  currentUserAnswer:$expr(this.currentUserAnswer)
                  difficulty:$expr(this.difficulty)
                  questionCount:$expr(this.questionCount)
                  questions:$expr(this.questions)
                  template:$expr(this.template)
                  speech:$expr(this.speech)
                  score:$expr(this.score)
                  status:(completed)
                  totalScore:$expr(this.totalScore)
                }
            }
          }
        }
      } else {
        spec {
          delay-seconds (6)
          with-request {
            intent {
              goal {ContinueQuiz}
              value: Quiz{
                category:$expr(this.category)
                currentQuestion:$expr(this.currentQuestion)
                  currentUserAnswer:$expr(this.currentUserAnswer)
                  difficulty:$expr(this.difficulty)
                  questionCount:$expr(this.questionCount)
                  questions:$expr(this.questions)
                  template:$expr(this.template)
                  speech:$expr(this.speech)
                  score:$expr(this.score)
                  status:(transition)
                  totalScore:$expr(this.totalScore)
                }
            }
          }
        }
      }
    }
    // if (this.status == 'question') {
    //   spec {
    //     delay-seconds (10)
    //     with-request {
    //       intent {
    //         goal {RefreshQuestion}
    //         value {$expr(this)}
    //       }
    //     }
    //   }
    // }
  }
  followup{
    prompt {
      dialog{
        template (" "){
          speech (" ")
        }
      }
      on-confirm{
        message{
          template ("#{title(this.template)}"){
            speech ("#{title(this.speech)}")
          }
        }
      }
      on-deny{
        message{
          template ("#{title(this.template)}"){
            speech ("#{title(this.speech)}")
          }
        }
      }
    }
  }

  render {
    if (this.status == 'tutorial'){
      layout-macro (tutorial) {
        param (quiz) {expression (this)}
      }
    }
    //    if (this.status == 'question'){
    //      layout-macro (question) {
    //       param (quiz) {expression (this)}
    //   }
    //}
    if (this.status == 'answer'){
      layout-macro (answer) {
        param (quiz) {expression (this)}
      }
    }
    if (this.status == 'completed'){
      layout-macro (completed) {
        param (quiz) {expression (this)}
      }
    }
  }
  conversation-drivers{
    // if(this.status == 'tutorial'){
    //   conversation-driver{
    //     template (Skip Tutorial) 
    //   }
    //   conversation-driver{
    //     template (Help)
    //   }
    // }
    // if(this.status == 'question'){
    //   conversation-driver{
    //     template (A)   
    //   }
    //   conversation-driver{
    //     template (B)   
    //   }
    //   conversation-driver{
    //     template (C)   
    //   }
    //   conversation-driver{
    //     template (D)
    //   }
    // }
    // if(this.status == 'answer'){
    //   conversation-driver{
    //     template (Next Question)
    //   }
    // }
    if(this.status == 'completed'){
      conversation-driver{
        template (New Game)
      }
    }
  }
}